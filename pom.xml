<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.cloudera.hadoop</groupId>
  <artifactId>hadoop-lzo</artifactId>
  <version>0.4.9-SNAPSHOT</version>
  <name>Hadoop GPL Compression</name>

  <repositories>
    <repository>
      <id>cdh.releases.repo</id>
      <url>https://repository.cloudera.com/content/repositories/releases</url>
      <name>CDH Releases Repository</name>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>cdh.snapshots.repo</id>
      <url>https://repository.cloudera.com/content/repositories/snapshots</url>
      <name>CDH Snapshots Repository</name>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  
  <pluginRepositories>
    <pluginRepository>
        <id>plugins-releases</id>
        <url>http://evgeny-goldin.org/artifactory/plugins-releases</url>
        <releases><enabled>true</enabled></releases>
        <snapshots><enabled>false</enabled></snapshots>
    </pluginRepository>
  </pluginRepositories>

  <properties>
    <!-- These properties are explicitly declared so that they can be available for maven-properties-plugin to generate the more complex properties. -->
    <raw-os-name>${os.name}</raw-os-name>
    <raw-os-arch>${os.arch}</raw-os-arch>
    <jvm-arch>${sun.arch.data.model}</jvm-arch>
    <raw-build-dir>${basedir}/build</raw-build-dir>

    <!-- More normal properties. -->
    <make.cmd>make</make.cmd>
  </properties>

  <dependencies>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.0.4</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging-api</artifactId>
      <version>1.0.4</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-core</artifactId>
      <version>0.20.2-CDH3B4-SNAPSHOT</version>
    </dependency>
  </dependencies>
    
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.1</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <id>clean</id>
            <configuration>
              <target>
                <delete dir="${basedir}/build/native" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>clean</phase>
          </execution>
          <execution>
            <id>compile</id>
            <configuration>
              <target>
                <mkdir dir="${build.native}/lib"/>
                <mkdir dir="${build.native}/src/com/hadoop/compression/lzo"/>
                <exec dir="${basedir}" executable="javah" failonerror="true">
                  <arg line="-classpath ${basedir}/target/classes -d ${build.native}/src/com/hadoop/compression/lzo -force -verbose com.hadoop.compression.lzo.LzoCompressor com.hadoop.compression.lzo.LzoDecompressor" />
                </exec>
                
                <exec dir="${build.native}" executable="sh" failonerror="true">
                  <env key="OS_NAME" value="${os.name}"/>
                  <env key="OS_ARCH" value="${os.arch}"/>
                  <env key="JVM_DATA_MODEL" value="${sun.arch.data.model}"/>
                  <env key="NATIVE_SRCDIR" value="${native.src.dir}"/>
                  <arg line="${basedir}/src/main/native/configure"/>
                </exec>
                
                <exec dir="${build.native}" executable="${make.cmd}" failonerror="true">
                  <env key="OS_NAME" value="${os.name}"/>
                  <env key="OS_ARCH" value="${os.arch}"/>
                  <env key="JVM_DATA_MODEL" value="${sun.arch.data.model}"/>
                  <env key="HADOOP_NATIVE_SRCDIR" value="${basedir}/src/main/native"/>
                </exec>
                
                <exec dir="${build.native}" executable="sh" failonerror="true">
                  <arg line="${build.native}/libtool --mode=install cp ${build.native}/libgplcompression.la ${build.native}/lib"/>
                </exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>compile</phase>
          </execution>
          <execution>
            <id>buildinfo</id>
            <configuration>
              <target>
                <tstamp>
                  <format property="build_time" pattern="MM/dd/yyyy hh:mm aa" timezone="GMT"/>
                </tstamp>
                <exec executable="${basedir}/src/get_build_revision.sh" outputproperty="build_revision" />
                <exec executable="whoami" outputproperty="build_author"/>
                <exec executable="uname" outputproperty="build_os">
                  <arg value="-a"/>
                </exec>
                
                <propertyfile file="${basedir}/target/classes/build.properties"
                              comment="This file is automatically generated - DO NOT EDIT">
                  <entry key="build_time" value="${build_time}"/>
                  <entry key="build_revision" value="${build_revision}"/>
                  <entry key="build_author" value="${build_author}"/>
                  <entry key="build_version" value="${version}"/>
                  <entry key="build_os" value="${build_os}"/>
                </propertyfile>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>compile</phase>
          </execution>

        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.3.1</version>
        <configuration>
          <archive>
            <manifestSections>
              <manifestSection>
                <name>com/hadoop/compression</name>
                <manifestEntries>
                  <Implementation-Title>Hadoop GPL Compression</Implementation-Title>
                  <Implementation-Version>${version}</Implementation-Version>
                  <Implementation-Vendor>GPL3</Implementation-Vendor>
                </manifestEntries>
              </manifestSection>
            </manifestSections>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.7.1</version>
        <configuration>
          <forkMode>always</forkMode>
          <systemPropertyVariables>
            <test.build.data>${basedir}/target/test-classes/data</test.build.data>
            <hadoop.log.dir>${basedir}/target/surefire-reports/logs</hadoop.log.dir>
            <test.src.dir>${basedir}/src/test/java</test.src.dir>
            <hadoop.policy.file>hadoop-policy.xml</hadoop.policy.file>
          </systemPropertyVariables>
          <argLine>-Djava.library.path=${build.native}/lib:${basedir}/lib/native/${build.platform}</argLine>
          <forkedProcessTimeoutInSeconds>900</forkedProcessTimeoutInSeconds>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.goldin.plugins</groupId>
        <artifactId>maven-properties-plugin</artifactId>
        <version>0.1</version>
        <executions>
          <execution>
            <id>set-properties</id>
            <phase>validate</phase>
            <goals>
              <goal>set-properties</goal>
            </goals>
            <configuration>
              <properties>
                <property>
                  <name>nonspace.os</name>
                  <value>{{ rawOsName.replaceAll(" ", "_") }}</value>
                </property>
                <property>
                  <name>build.platform</name>
                  <value>{{ rawOsName.replaceAll(" ", "_") + "-" + rawOsArch + "-" + jvmArch }}</value>
                </property>
                <property>
                  <name>build.native</name>
                  <value>{{ rawBuildDir + "/native/" + rawOsName.replaceAll(" ", "_") + "-" + rawOsArch + "-" + jvmArch }}</value>
                </property>
              </properties>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
